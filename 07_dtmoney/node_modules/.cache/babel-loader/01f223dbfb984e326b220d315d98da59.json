{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Downloads/DtMoney-master/src/hooks/useTransactions.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useEffect, useState, useContext } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n; // interface TransactionInput {\n//   title: string,\n//   amount: number,\n//   type: string,\n//   category: string,\n// }\n\nconst TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionsProvider({\n  children\n}) {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('/transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(transactionInput) {\n    const response = await api.post('/transactions', { ...transactionInput,\n      createdAt: new Date()\n    });\n    const {\n      transaction\n    } = response.data;\n    setTransactions([...transactions, transaction]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\nexport function useTransactions() {\n  _s2();\n\n  const context = useContext(TransactionsContext);\n  return context;\n}\n\n_s2(useTransactions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/lucas/Downloads/DtMoney-master/src/hooks/useTransactions.tsx"],"names":["createContext","useEffect","useState","useContext","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transactionInput","post","createdAt","Date","transaction","useTransactions","context"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,EAAwDC,UAAxD,QAA0E,OAA1E;AACA,SAASC,GAAT,QAAoB,iBAApB;;AASC,C,CAED;AACA;AACA;AACA;AACA;AACA;;AAaA,MAAMC,mBAAmB,gBAAGL,aAAa,CACvC,EADuC,CAAzC;AAIA,OAAO,SAASM,oBAAT,CAA+B;AAACC,EAAAA;AAAD,CAA/B,EAAsE;AAAA;;AAC3E,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAgB,EAAhB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,GAAG,CAACM,GAAJ,CAAQ,eAAR,EACCC,IADD,CACMC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADjC;AAED,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeM,iBAAf,CAAiCC,gBAAjC,EAAqE;AACnE,UAAMH,QAAQ,GAAG,MAAMR,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0B,EAC/C,GAAGD,gBAD4C;AAE/CE,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAFoC,KAA1B,CAAvB;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAkBP,QAAQ,CAACC,IAAjC;AAEAJ,IAAAA,eAAe,CAAC,CACd,GAAGD,YADW,EAEdW,WAFc,CAAD,CAAf;AAID;;AAED,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEX,MAAAA,YAAF;AAAgBM,MAAAA;AAAhB,KAArC;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA5BeD,oB;;KAAAA,oB;AA8BhB,OAAO,SAASc,eAAT,GAA2B;AAAA;;AAChC,QAAMC,OAAO,GAAGlB,UAAU,CAACE,mBAAD,CAA1B;AAEA,SAAOgB,OAAP;AACD;;IAJeD,e","sourcesContent":["import { createContext, useEffect, useState, ReactNode, useContext } from 'react';\nimport { api } from '../services/api';\n\ninterface Transaction {\n  id: number,\n  title: string,\n  amount: number,\n  type: string,\n  category: string,\n  createdAt: string,\n};\n\n// interface TransactionInput {\n//   title: string,\n//   amount: number,\n//   type: string,\n//   category: string,\n// }\n\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>;\n\ninterface TransactionsProviderProps {\n  children: ReactNode;\n}\n\ninterface TransactionsContextData {\n  transactions: Transaction[];\n  createTransaction: (transaction: TransactionInput) => Promise<void>;\n}\n\nconst TransactionsContext = createContext<TransactionsContextData>(\n  {} as TransactionsContextData\n  );\n\nexport function TransactionsProvider ({children}: TransactionsProviderProps) {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n  useEffect(() => {\n    api.get('/transactions')\n    .then(response => setTransactions(response.data.transactions))\n  }, []);\n\n  async function createTransaction(transactionInput: TransactionInput) {\n    const response = await api.post('/transactions', {\n      ...transactionInput,\n      createdAt: new Date(),\n    })\n\n    const { transaction } = response.data;\n\n    setTransactions([\n      ...transactions,\n      transaction,\n    ]);\n  }\n\n  return (\n    <TransactionsContext.Provider value={{ transactions, createTransaction }}>\n      {children}\n    </TransactionsContext.Provider>\n  );\n\n}\n\nexport function useTransactions() {\n  const context = useContext(TransactionsContext)\n\n  return context;\n}"]},"metadata":{},"sourceType":"module"}